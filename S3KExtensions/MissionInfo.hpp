#include "GameAPI/Game.hpp"
namespace Origins {
    enum TitleKind : int8 {
        TITLEKIND_SONIC1,
        TITLEKIND_SONIC2,
        TITLEKIND_SONIC3K,
        TITLEKIND_SONICCD,
        TITLEKIND_NUM,
        TITLEKIND_HITE = TITLEKIND_NUM,
        TITLEKIND_NUM_ADDHITE
    };

    enum FinishType : int32 {
        NONE,
        GOAL,
        TIME_LIMIT
    };

    enum Type : int32 {
        NOP,
        RING_COUNT,
        OBJECT_COUNT,
        DAMAGE_COUNT,
        SCORE_COUNT,
        ANIMAL_BOX_COUNT,
        TIME_WARP_COUNT,
        PAST_COUNT,
        FUTURE_COUNT
    };

    enum OpCode : int32 {
        OpCode_NONE,
        EQUAL,
        GREATER_EQUAL
    };

    enum EnemyType : int8 {
        ENEMYTYPE_NONE = -1,
        ENEMYTYPE_NAR,
        ENEMYTYPE_MELEON,
        ENEMYTYPE_MOTRA,
        ENEMYTYPE_GANIGANI_AND_BASARAN,
        ENEMYTYPE_STINGER,
        ENEMYTYPE_ANIMALBOX,
        ENEMYTYPE_OCTOR,
        ENEMYTYPE_CYCLONE,
        ENEMYTYPE_HALOGEN,
        ENEMYTYPE_ANIMALCAPSULE,
        ENEMYTYPE_CHULIPPON_AND_CYCLONE,
        ENEMYTYPE_TEFTEF,
        ENEMYTYPE_KECKO,
        ENEMYTYPE_BALLOON,
        ENEMYTYPE_TAGATAGA,
        ENEMYTYPE_KAMAKAMA,
        ENEMYTYPE_SWAP,
        ENEMYTYPE_FUTURE,
        ENEMYTYPE_PAST,
        ENEMYTYPE_BEETON,
        ENEMYTYPE_BASARAN_AND_NAR,
        ENEMYTYPE_KEROPPO,
        ENEMYTYPE_MEBE,
        ENEMYTYPE_NUM
    };

    enum LevelType : int8 {
        LEVELTYPE_NONE,
        LEVELTYPE_1,
        LEVELTYPE_2,
        LEVELTYPE_3,
        LEVELTYPE_4,
        LEVELTYPE_5,
        LEVELTYPE_NUM
    };

    enum StageKind : int8 {
        STAGEKIND_NONE,
        STAGEKIND_SONIC1_START,
        STAGEKIND_GREEN_HILL_ZONE_ACT_1 = STAGEKIND_SONIC1_START,
        STAGEKIND_GREEN_HILL_ZONE_ACT_2,
        STAGEKIND_GREEN_HILL_ZONE_ACT_3,
        STAGEKIND_MARBLE_ZONE_ACT_1,
        STAGEKIND_MARBLE_ZONE_ACT_2,
        STAGEKIND_MARBLE_ZONE_ACT_3,
        STAGEKIND_SPRING_YARD_ZONE_ACT_1,
        STAGEKIND_SPRING_YARD_ZONE_ACT_2,
        STAGEKIND_SPRING_YARD_ZONE_ACT_3,
        STAGEKIND_LABYRINTH_ZONE_ACT_1,
        STAGEKIND_LABYRINTH_ZONE_ACT_2,
        STAGEKIND_LABYRINTH_ZONE_ACT_3,
        STAGEKIND_STAR_LIGHT_ZONE_ACT_1,
        STAGEKIND_STAR_LIGHT_ZONE_ACT_2,
        STAGEKIND_STAR_LIGHT_ZONE_ACT_3,
        STAGEKIND_SCRAP_BRAIN_ZONE_ACT_1,
        STAGEKIND_SCRAP_BRAIN_ZONE_ACT_2,
        STAGEKIND_SCRAP_BRAIN_ZONE_ACT_3,
        STAGEKIND_FINAL_ZONE,
        STAGEKIND_SONIC1_SPECIAL_STAGE_1,
        STAGEKIND_SONIC1_SPECIAL_STAGE_2,
        STAGEKIND_SONIC1_SPECIAL_STAGE_3,
        STAGEKIND_SONIC1_SPECIAL_STAGE_4,
        STAGEKIND_SONIC1_SPECIAL_STAGE_5,
        STAGEKIND_SONIC1_SPECIAL_STAGE_6,
        STAGEKIND_SONIC1_ALL_STAGE,
        STAGEKIND_SONIC1_END,
        STAGEKIND_SONIC2_START = STAGEKIND_SONIC1_END,
        STAGEKIND_EMERALD_HILL_ZONE_ACT_1 = STAGEKIND_SONIC2_START,
        STAGEKIND_EMERALD_HILL_ZONE_ACT_2,
        STAGEKIND_CHEMICAL_PLANT_ZONE_ACT_1,
        STAGEKIND_CHEMICAL_PLANT_ZONE_ACT_2,
        STAGEKIND_AQUATIC_RUIN_ZONE_ACT_1,
        STAGEKIND_AQUATIC_RUIN_ZONE_ACT_2,
        STAGEKIND_CASINO_NIGHT_ZONE_ACT_1,
        STAGEKIND_CASINO_NIGHT_ZONE_ACT_2,
        STAGEKIND_HILL_TOP_ZONE_ACT_1,
        STAGEKIND_HILL_TOP_ZONE_ACT_2,
        STAGEKIND_MYSTIC_CAVE_ZONE_ACT_1,
        STAGEKIND_MYSTIC_CAVE_ZONE_ACT_2,
        STAGEKIND_OIL_OCEAN_ZONE_ACT_1,
        STAGEKIND_OIL_OCEAN_ZONE_ACT_2,
        STAGEKIND_METROPOLIS_ZONE_ACT_1,
        STAGEKIND_METROPOLIS_ZONE_ACT_2,
        STAGEKIND_METROPOLIS_ZONE_ACT_3,
        STAGEKIND_SKY_CHASE_ZONE,
        STAGEKIND_WING_FORTRESS_ZONE,
        STAGEKIND_DEATH_EGG_ZONE,
        STAGEKIND_SONIC2_SPECIAL_STAGE_1,
        STAGEKIND_SONIC2_SPECIAL_STAGE_2,
        STAGEKIND_SONIC2_SPECIAL_STAGE_3,
        STAGEKIND_SONIC2_SPECIAL_STAGE_4,
        STAGEKIND_SONIC2_SPECIAL_STAGE_5,
        STAGEKIND_SONIC2_SPECIAL_STAGE_6,
        STAGEKIND_SONIC2_SPECIAL_STAGE_7,
        STAGEKIND_SONIC2_ALL_STAGE,
        STAGEKIND_SONIC2_END,
        STAGEKIND_SONIC3K_START = STAGEKIND_SONIC2_END,
        STAGEKIND_ANGEL_ISLAND_ZONE_ACT_1 = STAGEKIND_SONIC3K_START,
        STAGEKIND_ANGEL_ISLAND_ZONE_ACT_2,
        STAGEKIND_HYDROCITY_ZONE_ACT_1,
        STAGEKIND_HYDROCITY_ZONE_ACT_2,
        STAGEKIND_MARBLE_GARDEN_ZONE_ACT_1,
        STAGEKIND_MARBLE_GARDEN_ZONE_ACT_2,
        STAGEKIND_CARNIVAL_NIGHT_ZONE_ACT_1,
        STAGEKIND_CARNIVAL_NIGHT_ZONE_ACT_2,
        STAGEKIND_ICE_CAP_ZONE_ACT_1,
        STAGEKIND_ICE_CAP_ZONE_ACT_2,
        STAGEKIND_LAUNCH_BASE_ZONE_ACT_1,
        STAGEKIND_LAUNCH_BASE_ZONE_ACT_2,
        STAGEKIND_MUSHROOM_HILL_ZONE_ACT_1,
        STAGEKIND_MUSHROOM_HILL_ZONE_ACT_2,
        STAGEKIND_FLYING_BATTERY_ZONE_ACT_1,
        STAGEKIND_FLYING_BATTERY_ZONE_ACT_2,
        STAGEKIND_SANDOPOLIS_ZONE_ACT_1,
        STAGEKIND_SANDOPOLIS_ZONE_ACT_2,
        STAGEKIND_LAVA_REEF_ZONE_ACT_1,
        STAGEKIND_LAVA_REEF_ZONE_ACT_2,
        STAGEKIND_HIDDEN_PALACE_ZONE,
        STAGEKIND_SKY_SANCTUARY_ZONE_ACT_1,
        STAGEKIND_SKY_SANCTUARY_ZONE_ACT_2,
        STAGEKIND_DEATH_EGG_ZONE_ACT_1,
        STAGEKIND_DEATH_EGG_ZONE_ACT_2,
        STAGEKIND_THE_DOOMSDAY_ZONE,
        STAGEKIND_SONIC3K_SPECIAL_STAGE_1,
        STAGEKIND_SONIC3K_SPECIAL_STAGE_2,
        STAGEKIND_SONIC3K_SPECIAL_STAGE_3,
        STAGEKIND_SONIC3K_SPECIAL_STAGE_4,
        STAGEKIND_SONIC3K_SPECIAL_STAGE_5,
        STAGEKIND_SONIC3K_SPECIAL_STAGE_6,
        STAGEKIND_SONIC3K_SPECIAL_STAGE_7,
        STAGEKIND_SONIC3K_SPECIAL_STAGE_8,
        STAGEKIND_SONIC3K_SPECIAL_STAGE_9,
        STAGEKIND_SONIC3K_SPECIAL_STAGE_10,
        STAGEKIND_SONIC3K_SPECIAL_STAGE_11,
        STAGEKIND_SONIC3K_SPECIAL_STAGE_12,
        STAGEKIND_SONIC3K_SPECIAL_STAGE_13,
        STAGEKIND_SONIC3K_SPECIAL_STAGE_14,
        STAGEKIND_SONIC3K_ALL_STAGE,
        STAGEKIND_SONIC3K_END,
        STAGEKIND_SONICCD_START = STAGEKIND_SONIC3K_END,
        STAGEKIND_PALMTREE_PANIC_ZONE1 = STAGEKIND_SONICCD_START,
        STAGEKIND_PALMTREE_PANIC_ZONE2,
        STAGEKIND_PALMTREE_PANIC_ZONE3,
        STAGEKIND_COLLISION_CHAOS_ZONE1,
        STAGEKIND_COLLISION_CHAOS_ZONE2,
        STAGEKIND_COLLISION_CHAOS_ZONE3,
        STAGEKIND_TIDAL_TEMPEST_ZONE1,
        STAGEKIND_TIDAL_TEMPEST_ZONE2,
        STAGEKIND_TIDAL_TEMPEST_ZONE3,
        STAGEKIND_QUARTZ_QUADRANT_ZONE1,
        STAGEKIND_QUARTZ_QUADRANT_ZONE2,
        STAGEKIND_QUARTZ_QUADRANT_ZONE3,
        STAGEKIND_WACKY_WORKBENCH_ZONE1,
        STAGEKIND_WACKY_WORKBENCH_ZONE2,
        STAGEKIND_WACKY_WORKBENCH_ZONE3,
        STAGEKIND_STARDUST_SPEEDWAY_ZONE1,
        STAGEKIND_STARDUST_SPEEDWAY_ZONE2,
        STAGEKIND_STARDUST_SPEEDWAY_ZONE3,
        STAGEKIND_METALLIC_MADNESS_ZONE1,
        STAGEKIND_METALLIC_MADNESS_ZONE2,
        STAGEKIND_METALLIC_MADNESS_ZONE3,
        STAGEKIND_SONICCD_SPECIAL_STAGE_1,
        STAGEKIND_SONICCD_SPECIAL_STAGE_2,
        STAGEKIND_SONICCD_SPECIAL_STAGE_3,
        STAGEKIND_SONICCD_SPECIAL_STAGE_4,
        STAGEKIND_SONICCD_SPECIAL_STAGE_5,
        STAGEKIND_SONICCD_SPECIAL_STAGE_6,
        STAGEKIND_SONICCD_SPECIAL_STAGE_7,
        STAGEKIND_SONICCD_ALL_STAGE,
        STAGEKIND_SONICCD_END,
        STAGEKIND_NUM = STAGEKIND_SONICCD_END,
        STAGEKIND_SONIC1_NUM = STAGEKIND_SONIC1_END - STAGEKIND_SONIC1_START,
        STAGEKIND_SONIC2_NUM = STAGEKIND_SONIC2_END - STAGEKIND_SONIC2_START,
        STAGEKIND_SONIC3K_NUM = STAGEKIND_SONIC3K_END - STAGEKIND_SONIC3K_START,
        STAGEKIND_SONICCD_NUM = STAGEKIND_SONICCD_END - STAGEKIND_SONICCD_START,
        STAGEKIND_ALL_START = STAGEKIND_SONIC1_START,
        STAGEKIND_ALL_END = STAGEKIND_SONICCD_END,
        STAGEKIND_STORY_END = STAGEKIND_THE_DOOMSDAY_ZONE
    };

    enum PlayerType : int8 {
        SONIC,
        TAILS,
        KNUCKLES
    };

    struct MissionCondition {
        Type m_type;                // Type:タイプ
        int32 m_value;              // m_value
        OpCode m_opCode;            // m_opCode
        int32 m_objectEntityIndex;  // オブジェクト番号
        EnemyType m_hintEnemyType;  // ヒント表示するエネミー種類
        bool m_isAlways;            // 常に条件を満たすか[満たさないと失敗]
    };

    struct MissionData {
        bool m_enableMission;             // 有効ミッションか
        TitleKind m_title;                // 起動タイトル
        int32 m_stageListPos;             // RSDK Editorでのステージ番号
        FinishType m_finishType;          // 終了条件
        int32 m_timeLimitSec;             // 制限時間[秒]
        MissionCondition m_conditions[3]; // クリア条件
        uint32 m_rankTimes[4];            // ランク判定条件[TIME]
        int32 m_rankRings[4];             // ランク判定条件[RING]
        LevelType m_levelType;            // LevelType:難易度
        StageKind m_dispStageKind;        // 表示するステージ
        const char *m_debugDescription;   // Debug用記述
        void* gap78;
        bool m_enableTails;               // テイルスを追加する
        bool m_isMirroring;               // ミラーリングする
        PlayerType m_playerType;          // プレイヤーキャラ
        bool m_enableAttackChain;         // 10秒ごとに敵を倒す
    };

    struct MissionReward {
        int32 m_coinCounts[4]; // もらえるコインの数
    };

    struct MissionRewardData {
        MissionReward m_rewards[6]; //ミッション報酬
        int32 m_firstClearBonus;    // 初回クリアボーナス
    };

    struct MissionInfo {
        MissionData m_missionData[112];        // ミッションデータ
        MissionRewardData m_missionRewardData; // ミッション報酬データ

        static MissionInfo *ParseRFL(void *rfl);
    };

} // namespace Origins